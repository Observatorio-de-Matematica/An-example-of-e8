/* To start with copy & paste the following texts    */
/*    248_base_matrices_load.mac                     */
/*    Decomp.mac                                     */

Ud01:Rd01/d01$
Ud02:Rd02/d02$
Ud03:Rd03/d03$
Ud04:Rd04/d04$
Ud05:Rd05/d05$
Ud06:Rd06/d06$
Ud07:Rd07/d07$
Ud12:Rd12/d12$
Ud13:Rd13/d13$
Ud14:Rd14/d14$
Ud15:Rd15/d15$
Ud16:Rd16/d16$
Ud17:Rd17/d17$
Ud23:Rd23/d23$
Ud24:Rd24/d24$
Ud25:Rd25/d25$
Ud26:Rd26/d26$
Ud27:Rd27/d27$
Ud34:Rd34/d34$
Ud35:Rd35/d35$
Ud36:Rd36/d36$
Ud37:Rd37/d37$
Ud45:Rd45/d45$
Ud46:Rd46/d46$
Ud47:Rd47/d47$
Ud56:Rd56/d56$
Ud57:Rd57/d57$
Ud67:Rd67/d67$
Um10:Rm10/m10$
Um11:Rm11/m11$
Um12:Rm12/m12$
Um13:Rm13/m13$
Um14:Rm14/m14$
Um15:Rm15/m15$
Um16:Rm16/m16$
Um17:Rm17/m17$
Ut10:Rt10/t10$
Ut11:Rt11/t11$
Ut12:Rt12/t12$
Ut13:Rt13/t13$
Ut14:Rt14/t14$
Ut15:Rt15/t15$
Ut16:Rt16/t16$
Ut17:Rt17/t17$
Uτ2:Rτ2/τ2$

D1:matrix([d01],[d02],[d03],[d04],[d05],[d06],[d07],
[d12],[d13],[d14],[d15],[d16],[d17],[d23],[d24],[d25],[d26],[d27],
[d34],[d35],[d36],[d37],[d45],[d46],[d47],[d56],[d57],[d67])$
D2:matrix([h01],[h02],[h03],[h04],[h05],[h06],[h07],
[h12],[h13],[h14],[h15],[h16],[h17],[h23],[h24],[h25],[h26],[h27],
[h34],[h35],[h36],[h37],[h45],[h46],[h47],[h56],[h57],[h67])$

MJl(D):=matrix([0, D[1][1], D[2][1], D[3][1], D[4][1], D[5][1], D[6][1], D[7][1]],
[- D[1][1],0, D[8][1], D[9][1], D[10][1], D[11][1], D[12][1], D[13][1]],
[- D[2][1],- D[8][1],0, D[14][1], D[15][1], D[16][1], D[17][1], D[18][1]],
[- D[3][1],- D[9][1],- D[14][1],0, D[19][1], D[20][1], D[21][1], D[22][1]],
[- D[4][1],- D[10][1],- D[15][1],- D[19][1],0, D[23][1], D[24][1], D[25][1]],
[- D[5][1],- D[11][1],- D[16][1],- D[20][1],- D[23][1],0, D[26][1], D[27][1]],
[- D[6][1],- D[12][1],- D[17][1],- D[21][1],- D[24][1],- D[26][1],0, D[28][1]],
[- D[7][1],- D[13][1],- D[18][1],- D[22][1],- D[25][1],- D[27][1],- D[28][1],0])$

/* Lemma 19.13  */

RX1:Rd01+Rd02+Rd03+Rd04+Rd05+Rd06+Rd07
    +Rd12+Rd13+Rd14+Rd15+Rd16+Rd17+Rd23
    +Rd24+Rd25+Rd26+Rd27+Rd34+Rd35+Rd36
    +Rd37+Rd45+Rd46+Rd47+Rd56+Rd57+Rd67
    +Rm10+Rm11+Rm12+Rm13+Rm14+Rm15+Rm16+Rm17
    +%i*Rt10+%i*Rt11+%i*Rt12+%i*Rt13+%i*Rt14+%i*Rt15+%i*Rt16+%i*Rt17
    -%i*Rτ2$

RX2:h01*Ud01+h02*Ud02+h03*Ud03+h04*Ud04+h05*Ud05+h06*Ud06+h07*Ud07
    +h12*Ud12+h13*Ud13+h14*Ud14+h15*Ud15+h16*Ud16+h17*Ud17+h23*Ud23
    +h24*Ud24+h25*Ud25+h26*Ud26+h27*Ud27+h34*Ud34+h35*Ud35+h36*Ud36
    +h37*Ud37+h45*Ud45+h46*Ud46+h47*Ud47+h56*Ud56+h57*Ud57+h67*Ud67
    +n10*Um10+n11*Um11+n12*Um12+n13*Um13+n14*Um14+n15*Um15+n16*Um16+n17*Um17
    +%i*s10*Ut10+%i*s11*Ut11+%i*s12*Ut12+%i*s13*Ut13+%i*s14*Ut14+%i*s15*Ut15+%i*s16*Ut16+%i*s17*Ut17
    -%i*τ3*Uτ2$

/* Lemma 19.14  */

Sd1:MJl(D1)$
Sd2:MJl(D2)$

So11:zeromatrix(10,10)$
So12:zeromatrix(10,10)$
for i:1 while (i<9) do
	for j:1 while (j<9) do (
		So11[i][j]:Sd1[i][j],
		So12[i][j]:Sd2[i][j]
		)$
SoX1[1][9]:m10$
SoX1[2][9]:m11$
SoX1[3][9]:m12$
SoX1[4][9]:m13$
SoX1[5][9]:m14$
SoX1[6][9]:m15$
SoX1[7][9]:m16$
SoX1[8][9]:m17$
SoX1[1][10]:t10$
SoX1[2][10]:t11$
SoX1[3][10]:t12$
SoX1[4][10]:t13$
SoX1[5][10]:t14$
SoX1[6][10]:t15$
SoX1[7][10]:t16$
SoX1[8][10]:t17$
SoX1[9][10]:τ2$

SoX1[9][1]:-m10$
SoX1[9][2]:-m11$
SoX1[9][3]:-m12$
SoX1[9][4]:-m13$
SoX1[9][5]:-m14$
SoX1[9][6]:-m15$
SoX1[9][7]:-m16$
SoX1[9][8]:-m17$
SoX1[10][1]:-t10$
SoX1[10][2]:-t11$
SoX1[10][3]:-t12$
SoX1[10][4]:-t13$
SoX1[10][5]:-t14$
SoX1[10][6]:-t15$
SoX1[10][7]:-t16$
SoX1[10][8]:-t17$
SoX1[10][9]:-τ2$

SoX2[1][9]:n10$
SoX2[2][9]:n11$
SoX2[3][9]:n12$
SoX2[4][9]:n13$
SoX2[5][9]:n14$
SoX2[6][9]:n15$
SoX2[7][9]:n16$
SoX2[8][9]:n17$
SoX2[1][10]:s10$
SoX2[2][10]:s11$
SoX2[3][10]:s12$
SoX2[4][10]:s13$
SoX2[5][10]:s14$
SoX2[6][10]:s15$
SoX2[7][10]:s16$
SoX2[8][10]:s17$
SoX2[9][10]:τ3$

SoX2[9][1]:-n10$
SoX2[9][2]:-n11$
SoX2[9][3]:-n12$
SoX2[9][4]:-n13$
SoX2[9][5]:-n14$
SoX2[9][6]:-n15$
SoX2[9][7]:-n16$
SoX2[9][8]:-n17$
SoX2[10][1]:-s10$
SoX2[10][2]:-s11$
SoX2[10][3]:-s12$
SoX2[10][4]:-s13$
SoX2[10][5]:-s14$
SoX2[10][6]:-s15$
SoX2[10][7]:-s16$
SoX2[10][8]:-s17$
SoX2[10][9]:-τ3$


R:RX1.RX2-RX2.RX1$
RR:Decomp()$

SS:SoX1.SoX2-SoX2.SoX1$
k:1$
RSS:0$
for i:1 while (i<8) do
for j:i+1 while (j<9) do (
	RSS:RSS+SS[i][j]*Ur[k],
	k:k+1
	)$
for k:1 while (k<9) do
RSS:RSS+SS[k][9]*Ur[28+k]$

for k:1 while (k<9) do
RSS:RSS+SS[k][10]*%i*Ur[54+k]$

RSS:RSS-SS[9][10]*%i*Ur[54]$

RRe:expand(RR);
RSSe:expand(RSS);

expand(RSSe-RRe);

