/* Digitalization of Lie algebra of type E6     */
/* output: basis matrices  e6o[1],...,e6o[78]   */


/* directory set  */
rdir:"/mnt/UandW"$
if maxima_tempdir # "/tmp" then rdir:"F:"$

/* Directory where the matrix definition files are stored */
sfile:sconcat(rdir,"/LieG/E8/Digitalization/DEF/###.mac")$
file_search_maxima: append (file_search_maxima,[sfile])$

load("nchrpl")$
load(eigen)$
load(diag)$
load(grobner)$

file_output_append:true$
tempdir:sconcat(rdir,"/LieG/E8/Digitalization/")$
Bopfile:sconcat(tempdir,"NZPchk.txt")$

NZP(sn,en)::=
for i:sn while (i<en+1) do
for j:sn while (j<en+1) do
 if RR[i][j]#0 then (stringout(Bopfile,i,j, RR[i][j],"NG"),
                     i:en,
                     j:en)
$
/* Caylay multiplication, Jordan multiplication , Freudenthal multiplication */
x:[x0,x1,x2,x3,x4,x5,x6,x7]$
y:[y0,y1,y2,y3,y4,y5,y6,y7]$
Γ(x):=[x[1],-x[2],-x[3],-x[4],-x[5],-x[6],-x[7],-x[8]]$
Cm(x,y):=[x[1]*y[1]-x[2]*y[2]-x[3]*y[3]-x[4]*y[4]-x[5]*y[5]-x[6]*y[6]-x[7]*y[7]-x[8]*y[8],
          x[1]*y[2]+x[2]*y[1]+x[3]*y[4]-x[4]*y[3]+x[5]*y[6]-x[6]*y[5]+x[7]*y[8]-x[8]*y[7],
	  x[1]*y[3]+x[3]*y[1]-x[2]*y[4]+x[4]*y[2]+x[7]*y[5]-x[5]*y[7]+x[6]*y[8]-x[8]*y[6],
	  x[1]*y[4]+x[4]*y[1]+x[2]*y[3]-x[3]*y[2]+x[6]*y[7]-x[7]*y[6]+x[5]*y[8]-x[8]*y[5],
	  x[1]*y[5]+x[5]*y[1]+x[6]*y[2]-x[2]*y[6]+x[8]*y[4]-x[4]*y[8]+x[3]*y[7]-x[7]*y[3],
	  x[1]*y[6]+x[6]*y[1]+x[2]*y[5]-x[5]*y[2]+x[7]*y[4]-x[4]*y[7]+x[8]*y[3]-x[3]*y[8],
	  x[1]*y[7]+x[7]*y[1]+x[5]*y[3]-x[3]*y[5]+x[4]*y[6]-x[6]*y[4]+x[8]*y[2]-x[2]*y[8],
	  x[1]*y[8]+x[8]*y[1]+x[2]*y[7]-x[7]*y[2]+x[3]*y[6]-x[6]*y[3]+x[4]*y[5]-x[5]*y[4]]$
c(x,y):=x[1]*y[1]+x[2]*y[2]+x[3]*y[3]+x[4]*y[4]+x[5]*y[5]+x[6]*y[6]+x[7]*y[7]+x[8]*y[8]$
x1:[x10,x11,x12,x13,x14,x15,x16,x17]$
x2:[x20,x21,x22,x23,x24,x25,x26,x27]$
x3:[x30,x31,x32,x33,x34,x35,x36,x37]$
y1:[y10,y11,y12,y13,y14,y15,y16,y17]$
y2:[y20,y21,y22,y23,y24,y25,y26,y27]$
y3:[y30,y31,y32,y33,y34,y35,y36,y37]$

X:[x01,x02,x03,x1,x2,x3]$
Y:[y01,y02,y03,y1,y2,y3]$

C(X,Y):=X[1]*Y[1]+X[2]*Y[2]+X[3]*Y[3]+2*c(X[4],Y[4])+2*c(X[5],Y[5])+2*c(X[6],Y[6])$

Jm(X,Y):=[X[1]*Y[1]+c(X[5],Y[5])+c(X[6],Y[6]),
          X[2]*Y[2]+c(X[6],Y[6])+c(X[4],Y[4]),
	  X[3]*Y[3]+c(X[4],Y[4])+c(X[5],Y[5]),
	  1/2*((X[2]+X[3])*Y[4]+(Y[2]+Y[3])*X[4]+Cm(Γ(X[6]),Γ(Y[5]))+Cm(Γ(Y[6]),Γ(X[5]))),
	  1/2*((X[3]+X[1])*Y[5]+(Y[3]+Y[1])*X[5]+Cm(Γ(X[4]),Γ(Y[6]))+Cm(Γ(Y[4]),Γ(X[6]))),
	  1/2*((X[1]+X[2])*Y[6]+(Y[1]+Y[2])*X[6]+Cm(Γ(X[5]),Γ(Y[4]))+Cm(Γ(Y[5]),Γ(X[4])))]$

Fm(X,Y):=[(X[2]*Y[3]+X[3]*Y[2])/2-c(X[4],Y[4]),
          (X[3]*Y[1]+X[1]*Y[3])/2-c(X[5],Y[5]),
	  (X[1]*Y[2]+X[2]*Y[1])/2-c(X[6],Y[6]),
	  (-Y[1]*X[4]-X[1]*Y[4]+Cm(Γ(X[6]),Γ(Y[5]))+Cm(Γ(Y[6]),Γ(X[5])))/2,
          (-Y[2]*X[5]-X[2]*Y[5]+Cm(Γ(X[4]),Γ(Y[6]))+Cm(Γ(Y[4]),Γ(X[6])))/2,
	  (-Y[3]*X[6]-X[3]*Y[6]+Cm(Γ(X[5]),Γ(Y[4]))+Cm(Γ(Y[5]),Γ(X[4])))/2]$
	  
mat(X):=matrix([X[1]],[X[2]],[X[3]],
         [X[4][1]],[X[4][2]],[X[4][3]],[X[4][4]],[X[4][5]],[X[4][6]],[X[4][7]],[X[4][8]],
	 [X[5][1]],[X[5][2]],[X[5][3]],[X[5][4]],[X[5][5]],[X[5][6]],[X[5][7]],[X[5][8]],
	 [X[6][1]],[X[6][2]],[X[6][3]],[X[6][4]],[X[6][5]],[X[6][6]],[X[6][7]],[X[6][8]])$
Z:zeromatrix(27,1)$
vec(Z):=[Z[1][1],Z[2][1],Z[3][1],
        [Z[4][1],Z[5][1],Z[6][1],Z[7][1],Z[8][1],Z[9][1],Z[10][1],Z[11][1]],
	[Z[12][1],Z[13][1],Z[14][1],Z[15][1],Z[16][1],Z[17][1],Z[18][1],Z[19][1]],
	[Z[20][1],Z[21][1],Z[22][1],Z[23][1],Z[24][1],Z[25][1],Z[26][1],Z[27][1]]]$


/* zero elements matirices */
array(M0,28,28)$
/* Adjoint e8c matrix in caylay algebra */
array(MM,60,60)$
/* Lemma 6.19 Mv */
Mv:matrix([-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],
          [ 0,-1, 0, 0, 0, 0, 0, 0,-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,-1, 0, 0, 1, 0],
          [ 0, 0,-1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0],
          [ 0, 0, 0,-1, 0, 0, 0, 0, 0, 0,-1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,-1, 0, 0, 0, 0, 0, 0],
          [ 0, 0, 0, 0,-1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,-1, 0, 0,-1, 0, 0, 0, 0, 0, 0, 0],
          [ 0, 0, 0, 0, 0,-1, 0, 0, 0, 0, 0, 0,-1, 0,-1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0],
          [ 0, 0, 0, 0, 0, 0,-1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0],
          [ 0, 0,-1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,-1,-1, 0, 0],
          [ 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,-1, 0, 0, 1, 0],
          [ 0, 0, 0, 0,-1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0],
          [ 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,-1, 0, 0, 0, 0, 0, 0],
          [ 0, 0, 0, 0, 0, 0,-1, 0, 0, 0, 0, 1, 0, 0, 0,-1, 0, 0,-1, 0, 0, 0, 0, 0, 0, 0, 0, 0],
          [ 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0,-1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0],
          [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,-1, 0, 0, 0, 0,-1],
          [ 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,-1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0],
          [ 0, 0, 0, 0, 0, 0,-1, 0, 0, 0, 0,-1, 0, 0, 0, 1, 0, 0,-1, 0, 0, 0, 0, 0, 0, 0, 0, 0],
          [ 0, 0, 0,-1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0],
          [ 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,-1, 0, 0, 0, 0, 0, 0, 0],
          [ 0, 0, 0, 0, 0, 0,-1, 0, 0, 0, 0,-1, 0, 0, 0,-1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0],
          [ 0, 0, 0, 0, 0,-1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0],
          [ 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,-1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0],
          [ 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,-1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0],
          [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,-1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,-1],
          [ 0, 1, 0, 0, 0, 0, 0, 0,-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0],
          [ 0, 0,-1, 0, 0, 0, 0,-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,-1, 0, 0],
          [ 0, 0,-1, 0, 0, 0, 0,-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,-1, 1, 0, 0],
          [ 0,-1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0],
          [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,-1, 0, 0, 0, 0, 0, 0, 0, 0,-1, 0, 0, 0, 0, 1])/2$

M0[28,28]:zeromatrix(28,28)$
M0[8,28]:zeromatrix(8,28)$
M0[1,28]:zeromatrix(1,28)$
M0[28,8]:zeromatrix(28,8)$
M0[8,8]:zeromatrix(8,8)$
M0[1,8]:zeromatrix(1,8)$
M0[28,1]:zeromatrix(28,1)$
M0[8,1]:zeromatrix(8,1)$
M0[1,1]:matrix([0])$

ME8:ident(8)$
/* Definition 6.1. fv(D) */
D():=matrix([d01],[d02],[d03],[d04],[d05],[d06],[d07],
[d12],[d13],[d14],[d15],[d16],[d17],[d23],[d24],[d25],[d26],[d27],
[d34],[d35],[d36],[d37],[d45],[d46],[d47],[d56],[d57],[d67])$

fd(DD):=matrix([DD[1][2]],[DD[1][3]],[DD[1][4]],[DD[1][5]],[DD[1][6]],[DD[1][7]],[DD[1][8]],
             [ DD[2][3]],[ DD[2][4]],[ DD[2][5]],[ DD[2][6]],[ DD[2][7]],[ DD[2][8]],
             [ DD[3][4]],[ DD[3][5]],[ DD[3][6]],[ DD[3][7]],[ DD[3][8]],
             [ DD[4][5]],[ DD[4][6]],[ DD[4][7]],[ DD[4][8]],
             [ DD[5][6]],[ DD[5][7]],[ DD[5][8]],
             [ DD[6][7]],[ DD[6][8]],
             [ DD[7][8]])$


m():=[m0,m1,m2,m3,m4,m5,m6,m7]$
m1():=[m10,m11,m12,m13,m14,m15,m16,m17]$
m2():=[m20,m21,m22,m23,m24,m25,m26,m27]$
m3():=[m30,m31,m32,m33,m34,m35,m36,m37]$
t0():=[%i*τ1,%i*τ2,-%i*τ1-%i*τ2]$
t1():=[%i*t10,%i*t11,%i*t12,%i*t13,%i*t14,%i*t15,%i*t16,%i*t17]$
t2():=[%i*t20,%i*t21,%i*t22,%i*t23,%i*t24,%i*t25,%i*t26,%i*t27]$
t3():=[%i*t30,%i*t31,%i*t32,%i*t33,%i*t34,%i*t35,%i*t36,%i*t37]$

D:D()$
m:m()$
m1:m1()$
m2:m2()$
m3:m3()$
t0:t0()$
t1:t1()$
t2:t2()$
t3:t3()$


/* Lemma 6.9 */
LD(D):=matrix([0,D[8][1],D[9][1],D[10][1],D[11][1],D[12][1],D[13][1],-D[2][1],-D[3][1],-D[4][1],-D[5][1],-D[6][1],-D[7][1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[-D[8][1],0,D[14][1],D[15][1],D[16][1],D[17][1],D[18][1],D[1][1],0,0,0,0,0,-D[3][1],-D[4][1],-D[5][1],-D[6][1],-D[7][1],0,0,0,0,0,0,0,0,0,0],
[-D[9][1],-D[14][1],0,D[19][1],D[20][1],D[21][1],D[22][1],0,D[1][1],0,0,0,0,D[2][1],0,0,0,0,-D[4][1],-D[5][1],-D[6][1],-D[7][1],0,0,0,0,0,0],
[-D[10][1],-D[15][1],-D[19][1],0,D[23][1],D[24][1],D[25][1],0,0,D[1][1],0,0,0,0,D[2][1],0,0,0,D[3][1],0,0,0,-D[5][1],-D[6][1],-D[7][1],0,0,0],
[-D[11][1],-D[16][1],-D[20][1],-D[23][1],0,D[26][1],D[27][1],0,0,0,D[1][1],0,0,0,0,D[2][1],0,0,0,D[3][1],0,0,D[4][1],0,0,-D[6][1],-D[7][1],0],
[-D[12][1],-D[17][1],-D[21][1],-D[24][1],-D[26][1],0,D[28][1],0,0,0,0,D[1][1],0,0,0,0,D[2][1],0,0,0,D[3][1],0,0,D[4][1],0,D[5][1],0,-D[7][1]],
[-D[13][1],-D[18][1],-D[22][1],-D[25][1],-D[27][1],-D[28][1],0,0,0,0,0,0,D[1][1],0,0,0,0,D[2][1],0,0,0,D[3][1],0,0,D[4][1],0,D[5][1],D[6][1]],
[D[2][1],-D[1][1],0,0,0,0,0,0,D[14][1],D[15][1],D[16][1],D[17][1],D[18][1],-D[9][1],-D[10][1],-D[11][1],-D[12][1],-D[13][1],0,0,0,0,0,0,0,0,0,0],
[D[3][1],0,-D[1][1],0,0,0,0,-D[14][1],0,D[19][1],D[20][1],D[21][1],D[22][1],D[8][1],0,0,0,0,-D[10][1],-D[11][1],-D[12][1],-D[13][1],0,0,0,0,0,0],
[D[4][1],0,0,-D[1][1],0,0,0,-D[15][1],-D[19][1],0,D[23][1],D[24][1],D[25][1],0,D[8][1],0,0,0,D[9][1],0,0,0,-D[11][1],-D[12][1],-D[13][1],0,0,0],
[D[5][1],0,0,0,-D[1][1],0,0,-D[16][1],-D[20][1],-D[23][1],0,D[26][1],D[27][1],0,0,D[8][1],0,0,0,D[9][1],0,0,D[10][1],0,0,-D[12][1],-D[13][1],0],
[D[6][1],0,0,0,0,-D[1][1],0,-D[17][1],-D[21][1],-D[24][1],-D[26][1],0,D[28][1],0,0,0,D[8][1],0,0,0,D[9][1],0,0,D[10][1],0,D[11][1],0,-D[13][1]],
[D[7][1],0,0,0,0,0,-D[1][1],-D[18][1],-D[22][1],-D[25][1],-D[27][1],-D[28][1],0,0,0,0,0,D[8][1],0,0,0,D[9][1],0,0,D[10][1],0,D[11][1],D[12][1]],
[0,D[3][1],-D[2][1],0,0,0,0,D[9][1],-D[8][1],0,0,0,0,0,D[19][1],D[20][1],D[21][1],D[22][1],-D[15][1],-D[16][1],-D[17][1],-D[18][1],0,0,0,0,0,0],
[0,D[4][1],0,-D[2][1],0,0,0,D[10][1],0,-D[8][1],0,0,0,-D[19][1],0,D[23][1],D[24][1],D[25][1],D[14][1],0,0,0,-D[16][1],-D[17][1],-D[18][1],0,0,0],
[0,D[5][1],0,0,-D[2][1],0,0,D[11][1],0,0,-D[8][1],0,0,-D[20][1],-D[23][1],0,D[26][1],D[27][1],0,D[14][1],0,0,D[15][1],0,0,-D[17][1],-D[18][1],0],
[0,D[6][1],0,0,0,-D[2][1],0,D[12][1],0,0,0,-D[8][1],0,-D[21][1],-D[24][1],-D[26][1],0,D[28][1],0,0,D[14][1],0,0,D[15][1],0,D[16][1],0,-D[18][1]],
[0,D[7][1],0,0,0,0,-D[2][1],D[13][1],0,0,0,0,-D[8][1],-D[22][1],-D[25][1],-D[27][1],-D[28][1],0,0,0,0,D[14][1],0,0,D[15][1],0,D[16][1],D[17][1]],
[0,0,D[4][1],-D[3][1],0,0,0,0,D[10][1],-D[9][1],0,0,0,D[15][1],-D[14][1],0,0,0,0,D[23][1],D[24][1],D[25][1],-D[20][1],-D[21][1],-D[22][1],0,0,0],
[0,0,D[5][1],0,-D[3][1],0,0,0,D[11][1],0,-D[9][1],0,0,D[16][1],0,-D[14][1],0,0,-D[23][1],0,D[26][1],D[27][1],D[19][1],0,0,-D[21][1],-D[22][1],0],
[0,0,D[6][1],0,0,-D[3][1],0,0,D[12][1],0,0,-D[9][1],0,D[17][1],0,0,-D[14][1],0,-D[24][1],-D[26][1],0,D[28][1],0,D[19][1],0,D[20][1],0,-D[22][1]],
[0,0,D[7][1],0,0,0,-D[3][1],0,D[13][1],0,0,0,-D[9][1],D[18][1],0,0,0,-D[14][1],-D[25][1],-D[27][1],-D[28][1],0,0,0,D[19][1],0,D[20][1],D[21][1]],
[0,0,0,D[5][1],-D[4][1],0,0,0,0,D[11][1],-D[10][1],0,0,0,D[16][1],-D[15][1],0,0,D[20][1],-D[19][1],0,0,0,D[26][1],D[27][1],-D[24][1],-D[25][1],0],
[0,0,0,D[6][1],0,-D[4][1],0,0,0,D[12][1],0,-D[10][1],0,0,D[17][1],0,-D[15][1],0,D[21][1],0,-D[19][1],0,-D[26][1],0,D[28][1],D[23][1],0,-D[25][1]],
[0,0,0,D[7][1],0,0,-D[4][1],0,0,D[13][1],0,0,-D[10][1],0,D[18][1],0,0,-D[15][1],D[22][1],0,0,-D[19][1],-D[27][1],-D[28][1],0,0,D[23][1],D[24][1]],
[0,0,0,0,D[6][1],-D[5][1],0,0,0,0,D[12][1],-D[11][1],0,0,0,D[17][1],-D[16][1],0,0,D[21][1],-D[20][1],0,D[24][1],-D[23][1],0,0,D[28][1],-D[27][1]],
[0,0,0,0,D[7][1],0,-D[5][1],0,0,0,D[13][1],0,-D[11][1],0,0,D[18][1],0,-D[16][1],0,D[22][1],0,-D[20][1],D[25][1],0,-D[23][1],-D[28][1],0,D[26][1]],
[0,0,0,0,0,D[7][1],-D[6][1],0,0,0,0,D[13][1],-D[12][1],0,0,0,D[18][1],-D[17][1],0,0,D[22][1],-D[21][1],0,D[25][1],-D[24][1],D[27][1],-D[26][1],0])$

/* Lemma 6.10 */ 
MJr(m):=matrix([m[2],m[3],m[4],m[5],m[6],m[7],m[8],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[-m[1],0,0,0,0,0,0,m[3],m[4],m[5],m[6],m[7],m[8],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,-m[1],0,0,0,0,0,-m[2],0,0,0,0,0,m[4],m[5],m[6],m[7],m[8],0,0,0,0,0,0,0,0,0,0],
[0,0,-m[1],0,0,0,0,0,-m[2],0,0,0,0,-m[3],0,0,0,0,m[5],m[6],m[7],m[8],0,0,0,0,0,0],
[0,0,0,-m[1],0,0,0,0,0,-m[2],0,0,0,0,-m[3],0,0,0,-m[4],0,0,0,m[6],m[7],m[8],0,0,0],
[0,0,0,0,-m[1],0,0,0,0,0,-m[2],0,0,0,0,-m[3],0,0,0,-m[4],0,0,-m[5],0,0,m[7],m[8],0],
[0,0,0,0,0,-m[1],0,0,0,0,0,-m[2],0,0,0,0,-m[3],0,0,0,-m[4],0,0,-m[5],0,-m[6],0,m[8]],
[0,0,0,0,0,0,-m[1],0,0,0,0,0,-m[2],0,0,0,0,-m[3],0,0,0,-m[4],0,0,-m[5],0,-m[6],-m[7]])$
/* Lemma 6.13 */
MDr(m):=transpose(MJr(m))$
/* Lemma 6.12 */
MDl(m):=-MDr(m)$
/* Lemma 6.11 */
MJl(D):=matrix([0, D[1][1], D[2][1], D[3][1], D[4][1], D[5][1], D[6][1], D[7][1]],
[- D[1][1],0, D[8][1], D[9][1], D[10][1], D[11][1], D[12][1], D[13][1]],
[- D[2][1],- D[8][1],0, D[14][1], D[15][1], D[16][1], D[17][1], D[18][1]],
[- D[3][1],- D[9][1],- D[14][1],0, D[19][1], D[20][1], D[21][1], D[22][1]],
[- D[4][1],- D[10][1],- D[15][1],- D[19][1],0, D[23][1], D[24][1], D[25][1]],
[- D[5][1],- D[11][1],- D[16][1],- D[20][1],- D[23][1],0, D[26][1], D[27][1]],
[- D[6][1],- D[12][1],- D[17][1],- D[21][1],- D[24][1],- D[26][1],0, D[28][1]],
[- D[7][1],- D[13][1],- D[18][1],- D[22][1],- D[25][1],- D[27][1],- D[28][1],0])$
/* Lemma 6.14 */
MIr(m):=matrix([m[1],-m[2],-m[3],-m[4],-m[5],-m[6],-m[7],-m[8]],
[-m[2],-m[1],-m[4],m[3],-m[6],m[5],-m[8],m[7]],
[-m[3],m[4],-m[1],-m[2],m[7],-m[8],-m[5],m[6]],
[-m[4],-m[3],m[2],-m[1],-m[8],-m[7],m[6],m[5]],
[-m[5],m[6],-m[7],m[8],-m[1],-m[2],m[3],-m[4]],
[-m[6],-m[5],m[8],m[7],m[2],-m[1],-m[4],-m[3]],
[-m[7],m[8],m[5],-m[6],-m[3],m[4],-m[1],-m[2]],
[-m[8],-m[7],-m[6],-m[5],m[4],m[3],m[2],-m[1]])$
/* Lemma 6.15 */
MIl(m):=matrix([m[1],-m[2],-m[3],-m[4],-m[5],-m[6],-m[7],-m[8]],
[-m[2],-m[1],m[4],-m[3],m[6],-m[5],m[8],-m[7]],
[-m[3],-m[4],-m[1],m[2],-m[7],m[8],m[5],-m[6]],
[-m[4],m[3],-m[2],-m[1],m[8],m[7],-m[6],-m[5]],
[-m[5],-m[6],m[7],-m[8],-m[1],m[2],-m[3],m[4]],
[-m[6],m[5],-m[8],-m[7],-m[2],-m[1],m[4],m[3]],
[-m[7],-m[8],-m[5],m[6],m[3],-m[4],-m[1],m[2]],
[-m[8],m[7],m[6],m[5],-m[4],-m[3],-m[2],-m[1]])$
/* Lemma 6.16 */
MC(m):=matrix([m[1],m[2],m[3],m[4],m[5],m[6],m[7],m[8]])$

Mt(m):=transpose(MC(m))$

/* Lie algebra definition  */
Ddef()::=
(
Dd:zeromatrix(27,27),
D1:D,
D2:expand(Mv.D1),
D3:expand(Mv.D2),
for i:1 while(i<9) do(
    for j:1 while(j<9) do (
	    Dd[i+3][j+3]:MJl(D1)[i][j],
	    Dd[i+11][j+11]:MJl(D2)[i][j],
	    Dd[i+19][j+19]:MJl(D3)[i][j]
))
)$

Mdef()::=
(
Mm:zeromatrix(27,27),
for j:1 while(j<9) do(
	Mm[1][j+11]:-MC(m2)[1][j],
	Mm[1][j+19]:MC(m3)[1][j],
	Mm[2][j+3]:MC(m1)[1][j],
	Mm[2][j+19]:-MC(m3)[1][j],
	Mm[3][j+3]:-MC(m1)[1][j],
	Mm[3][j+11]:MC(m2)[1][j]
	),
for i:1 while(i<9) do(
	Mm[i+11][1]:MC(m2)[1][i]/2,
	Mm[i+19][1]:-MC(m3)[1][i]/2,
	Mm[i+3][2]:-MC(m1)[1][i]/2,
	Mm[i+19][2]:MC(m3)[1][i]/2,
	Mm[i+3][3]:MC(m1)[1][i]/2,
	Mm[i+11][3]:-MC(m2)[1][i]/2
	),
for i:1 while(i<9) do(
	for j:1 while(j<9) do (
		Mm[i+3][j+11]:-(MIr(m3))[i][j]/2,
		Mm[i+3][j+19]:transpose(MIr(m2))[i][j]/2,
		Mm[i+11][j+3]:transpose(MIr(m3))[i][j]/2,
		Mm[i+11][j+19]:-(MIr(m1))[i][j]/2,
		Mm[i+19][j+3]:-(MIr(m2))[i][j]/2,
		Mm[i+19][j+11]:transpose(MIr(m1))[i][j]/2
		))
)$

Tdef()::=
(
Tt:zeromatrix(27,27),
Tt[1][1]:t0[1],
Tt[2][2]:t0[2],
Tt[3][3]:t0[3],
for i:1 while(i<9) do(
	Tt[i+3][i+3]:(t0[2]+t0[3])/2,
	Tt[i+11][i+11]:(t0[1]+t0[3])/2,
	Tt[i+19][i+19]:(t0[1]+t0[2])/2
	),
for j:1 while(j<9) do(
	Tt[1][j+11]:MC(t2)[1][j],
	Tt[1][j+19]:MC(t3)[1][j],
	Tt[2][j+3]:MC(t1)[1][j],
	Tt[2][j+19]:MC(t3)[1][j],
	Tt[3][j+3]:MC(t1)[1][j],
	Tt[3][j+11]:MC(t2)[1][j]
	),
for i:1 while(i<9) do(
	Tt[i+11][1]:MC(t2)[1][i]/2,
	Tt[i+19][1]:MC(t3)[1][i]/2,
	Tt[i+3][2]:MC(t1)[1][i]/2,
	Tt[i+19][2]:MC(t3)[1][i]/2,
	Tt[i+3][3]:MC(t1)[1][i]/2,
	Tt[i+11][3]:MC(t2)[1][i]/2
	),
for i:1 while(i<9) do(
	for j:1 while(j<9) do (
		Tt[i+3][j+11]:MIr(t3)[i][j]/2,
		Tt[i+3][j+19]:transpose(MIr(t2))[i][j]/2,
		Tt[i+11][j+3]:transpose(MIr(t3))[i][j]/2,
		Tt[i+11][j+19]:MIr(t1)[i][j]/2,
		Tt[i+19][j+3]:MIr(t2)[i][j]/2,
		Tt[i+19][j+11]:transpose(MIr(t1))[i][j]/2
		))
)$

array(e6,78)$
array(e6o,78)$   /* orthogonal bases  */

fD:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ]$
for i:1 while(i<29) do(
D:zeromatrix(28,1),
D[i][1]:1 ,
Ddef(),
fD[i]:Dd,
e6[i]:Dd
)$

fM1:[0,0,0,0,0,0,0,0]$
fM2:[0,0,0,0,0,0,0,0]$
fM3:[0,0,0,0,0,0,0,0]$
m2:[0,0,0,0,0,0,0,0]$
m3:[0,0,0,0,0,0,0,0]$
for i:1 while(i<9) do (
m1:[0,0,0,0,0,0,0,0],
m1[i]:1 ,
Mdef(),
fM1[i]:Mm,
e6[i+28]:Mm
)$
m1:[0,0,0,0,0,0,0,0]$
m3:[0,0,0,0,0,0,0,0]$
for i:1 while(i<9) do (
m2:[0,0,0,0,0,0,0,0],
m2[i]:1 ,
Mdef(),
fM2[i]:Mm,
e6[i+36]:Mm
)$
m1:[0,0,0,0,0,0,0,0]$
m2:[0,0,0,0,0,0,0,0]$
for i:1 while(i<9) do (
m3:[0,0,0,0,0,0,0,0],
m3[i]:1 ,
Mdef(),
fM3[i]:Mm,
e6[i+44]:Mm
)$

fT0:[0,0]$
fT1:[0,0,0,0,0,0,0,0]$
fT2:[0,0,0,0,0,0,0,0]$
fT3:[0,0,0,0,0,0,0,0]$
t1:[0,0,0,0,0,0,0,0]$
t2:[0,0,0,0,0,0,0,0]$
t3:[0,0,0,0,0,0,0,0]$
/* orthogonal element */
t0:[%i,-%i,0]$  
Tdef()$
fT0[1]:Tt$
e6[53]:Tt$
/* orthogonal element */
t0:[%i,%i,-2*%i]$  
Tdef()$
fT0[2]:Tt$
e6[54]:Tt$
t0:[0,0,0]$
t2:[0,0,0,0,0,0,0,0]$
t3:[0,0,0,0,0,0,0,0]$
for i:1 while(i<9) do (
t1:[0,0,0,0,0,0,0,0],
t1[i]:%i ,
Tdef(),
fT1[i]:Tt,
e6[i+54]:Tt
)$
t0:[0,0,0]$
t1:[0,0,0,0,0,0,0,0]$
t3:[0,0,0,0,0,0,0,0]$
for i:1 while(i<9) do (
t2:[0,0,0,0,0,0,0,0],
t2[i]:%i ,
Tdef(),
fT2[i]:Tt,
e6[i+62]:Tt
)$
t0:[0,0,0]$
t1:[0,0,0,0,0,0,0,0]$
t2:[0,0,0,0,0,0,0,0]$
for i:1 while(i<9) do (
t3:[0,0,0,0,0,0,0,0],
t3[i]:%i ,
Tdef(),
fT3[i]:Tt,
e6[i+70]:Tt
)$

/* Inner product transpose */
Tran()::=
(
R:transpose(R),
for i:1 while (i<4) do (
	for j:4 while (j<28) do(
		R[i][j]:R[i][j]*2,
		R[j][i]:R[j][i]/2
		)
)
)$

/* grobner base function  */
gso(A) := block([m,n,i,B,C,D],
m : length(A),
B : transpose(A),
n : length(B),
C : gramschmidt(B),
D : zeromatrix(n, m),
for i:1 thru n do
	D[i] : C[i],
	transpose(D)
)$
gson(A) := block([m,n,i,B,C,D],
m : length(A),
B : transpose(A),
n : length(B),
C : gramschmidt(B),
D : zeromatrix(n, m),
for i:1 thru n do
D[i] : unitvector(C[i]),
transpose(D)
)$

m2v(M):=
(
V:makelist(0,729),
for k:1 while(k<28) do(
	for j:1 while(j<28) do(
		V[j+(k-1)*27]:M[j][k])
		),
V)$

v2m(V):=
(
M:zeromatrix(27,27),
for k:1 while(k<28) do(
	for j:1 while(j<28) do(
		M[j][k]:V[j+(k-1)*27])
		),
M)$

/* gram-schdmit's orthogonalize */
LA:zeromatrix(729,78)$
SA:zeromatrix(729,78)$
for k:1 while(k<79) do(
	V:m2v(e6[k]),
	for j:1 while(j<730) do
		LA[j][k]:V[j]
	)$
SA:gso(LA)$
V:makelist(0,729)$
for k:1 while(k<79) do(
	for j:1 while(j<730) do
		V[j]:SA[j][k],
	e6o[k]:v2m(V)
	)$

